name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Get commits since last release
        id: commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)")
          else
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)" ${LAST_TAG}..HEAD)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG in main
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          echo "# –í–µ—Ä—Å–∏—è ${{ github.run_number }} - $(date '+%Y-%m-%d')" > CHANGELOG_NEW.md
          echo "" >> CHANGELOG_NEW.md
          echo "${{ steps.commits.outputs.commits }}" >> CHANGELOG_NEW.md
          echo "" >> CHANGELOG_NEW.md
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> CHANGELOG_NEW.md
          fi
          mv CHANGELOG_NEW.md CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for version ${{ github.run_number }}"
          git push

      - name: Create release branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}

      - name: Login to Yandex Container Registry
        run: |
          echo '${{ secrets.YC_SA_JSON_CREDENTIALS }}' | docker login --username json_key --password-stdin cr.yandex

      - name: Build and push Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }} cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}_latest
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}_latest

      - name: Create git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ github.run_number }}
          git push origin ${{ github.run_number }}

      - name: Create release issue
        run: |
          ISSUE_BODY="**–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ ${{ github.run_number }}**

          üìÖ **–î–∞—Ç–∞:** $(date '+%Y-%m-%d %H:%M:%S')
          üë§ **–ê–≤—Ç–æ—Ä:** ${{ github.actor }}
          üè∑Ô∏è **–í–µ—Ä—Å–∏—è:** ${{ github.run_number }}
          üåø **–í–µ—Ç–∫–∞:** releases/${{ github.run_number }}

          ## üìù –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
          ${{ steps.commits.outputs.commits }}

          ## üê≥ Docker –æ–±—Ä–∞–∑:
          \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}\`

          ## üîó –°—Å—ã–ª–∫–∏:
          - [Container Registry](https://console.cloud.yandex.ru/folders/${{ secrets.YC_FOLDER_ID }}/container-registry/registries/${{ secrets.YC_REGISTRY_ID }})
          - [–†–µ–ª–∏–∑–Ω–∞—è –≤–µ—Ç–∫–∞](https://github.com/${{ github.repository }}/tree/releases/${{ github.run_number }})
          - [–¢–µ–≥ ${{ github.run_number }}](https://github.com/${{ github.repository }}/releases/tag/${{ github.run_number }})"

          gh issue create --title "Release ${{ github.run_number }}" --body "$ISSUE_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
