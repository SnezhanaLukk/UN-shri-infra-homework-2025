name: Hotfix

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to fix (e.g., 8)"
        required: true
        type: string
      issue_number:
        description: "Release issue number"
        required: true
        type: string

jobs:
  hotfix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.release_version }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Login to Yandex Container Registry
        env:
          YC_SA_JSON_CREDENTIALS: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        run: |
          echo "${YC_SA_JSON_CREDENTIALS}" > key.json
          docker login --username json_key --password-stdin cr.yandex < key.json
          rm key.json

      - name: Build and push Docker image
        run: |
          # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏ –¥–ª—è hotfix
          docker build -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_latest

          # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑—ã
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_latest

      - name: Create git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ inputs.release_version }}_fix${{ github.run_number }}
          git push origin ${{ inputs.release_version }}_fix${{ github.run_number }}

      - name: Get commits since last tag
        id: commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)")
          else
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)" ${LAST_TAG}..HEAD)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Checkout for gh command
        uses: actions/checkout@v4

      - name: Comment on release issue
        run: |
          COMMENT_BODY="## üîß Hotfix ${{ inputs.release_version }}_fix${{ github.run_number }}

          üìÖ **–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞:** $(date '+%Y-%m-%d %H:%M:%S')
          üë§ **–ê–≤—Ç–æ—Ä —Ñ–∏–∫—Å–∞:** ${{ github.actor }}

          ## üìù –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
          ${{ steps.commits.outputs.commits }}

          ## üê≥ Docker –æ–±—Ä–∞–∑:
          \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }}\`"

          gh issue comment ${{ inputs.issue_number }} --body "$COMMENT_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}